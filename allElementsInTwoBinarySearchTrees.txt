/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
    vector<int>v1,v2;
public:
    void printInAscOrder(TreeNode *curr,vector<int>&v){
        if(curr->left!=NULL){
            printInAscOrder(curr->left,v);
        }
        v.push_back(curr->val);
        if(curr->right!=NULL){
            printInAscOrder(curr->right,v);
        }
    }


    vector<int> getAllElements(TreeNode* root1, TreeNode* root2) {
        if(root1!=NULL)
        printInAscOrder(root1,v1);
        if(root2!=NULL)
        printInAscOrder(root2,v2);

        vector<int>ans;
        int i=0,j=0;
        while(i<v1.size() || j<v2.size()){
            int temp1=(i==v1.size()?INT_MAX:v1[i]);
            int temp2=(j==v2.size()?INT_MAX:v2[j]);
            ans.push_back(min(temp1,temp2));
            if(temp1<=temp2)
                i++;
            else 
                j++;
        }

        return ans;

    }
};