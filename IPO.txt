class Solution {
private:
    vector<pair<long long, long long>>pc;

public:
    int findMaximizedCapital(int k, int w, vector<int>& profits, vector<int>& capital) {
        multiset<int>canTake;
        int n=profits.size();
        for(int i=0;i<n;i++){
            pc.push_back({capital[i],profits[i]});
        }

        sort(pc.begin(),pc.end());
        pc.push_back({LLONG_MAX,LLONG_MAX});
        n++;

        int i=0;
        while(k && i<n){
            if(pc[i].first<=w){
                canTake.insert(pc[i].second);
                i++;
            }
            else{
                if(canTake.empty())
                    break;
                w+=*prev(canTake.end());
                canTake.erase(prev(canTake.end()));
                k--;
            }
        }


        return w;


    }
};