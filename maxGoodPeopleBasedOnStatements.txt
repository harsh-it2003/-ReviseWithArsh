class Solution {
public:

    int possible(int k,vector<vector<int>>&v){
        int n=v.size();
        int cnt=0;

        vector<int>goods(n);
        for(int j=0;j<n;j++){
            if((k>>j)&1){
                goods[j]=1;
                cnt++;
            }
        }

        vector<int>bad(n),goodHasToBe(n);

        for(int i=0;i<n;i++){
            if(goods[i]){
                for(int j=0;j<v[i].size();j++){
                    if(v[i][j]==1){
                        goodHasToBe[j]=1;
                    }
                    else if(v[i][j]==0){
                        bad[j]=1;
                    }
                }
            }
        }

        for(int i=0;i<n;i++){
            if(bad[i] && goods[i]){
                return 0;
            }
        }

        for(int i=0;i<goodHasToBe.size();i++){
            if(goodHasToBe[i] && goods[i]==0)
                return 0;
        }

        return cnt;

    }



    int maximumGood(vector<vector<int>>&v){
        int ans=0,till=(1<<v.size());

        for(int i=1;i<till;i++){
            ans=max(possible(i,v),ans);
        }

        return ans;
        
    }
};